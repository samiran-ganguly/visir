'''
Copyright (c) <year>, <copyright holder>
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
    * Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.
    * Neither the name of the <organization> nor the
    names of its contributors may be used to endorse or promote products
    derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY <copyright holder> ''AS IS'' AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL <copyright holder> BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
'''


import numpy as np
import pathlib
import PIL
import PIL.Image
import tensorflow as tf
import tf.image
import tf.keras.preprocessing


'''
Functions:
    setuppaths(dbname,path) -> to be generalized to other, right now for CAMEL
        setup the paths to data folder:
            CAMEL/
                Scene 1/
                    Vis/
                        files...
                    IR/
                        files...
                    annotations.txt
        setup VIZIR object data directory
            VIZIRObjData/
                Obj<cat_name>/
                    Vis/
                        fname
                    IR/
                        fname
        setup VIZIR output directory
            VIZIROutput/
                fframe/
                    fnameVis#
                    fnameIR#
                objects/
                    <cat_name>
                        fnameVis#
                        fnameIR#
                    
    
    extractobjects(scenenum) -> extract objects from scenes in CAMEL dataset library to VIZIR data directory
    
    comparescene(type = 'CAMEL|VIZIR',path,scenenum,imgnum) -> compare Vis and IR scenes from either CAMEL or VIZIR output datasets
    
    compareobjects(objectclass) -> compare a set of objects generated by VIZIR 
    
    saveimagedata(type = 'Frame|Object',category)
    
                    
'''
MSCOCO = {0: u'__background__',
        1: u'person',
        2: u'bicycle',
        3: u'car',
        4: u'motorcycle',
        5: u'airplane',
        6: u'bus',
        7: u'train',
        8: u'truck',
        9: u'boat',
        10: u'traffic light',
        11: u'fire hydrant',
        12: u'stop sign',
        13: u'parking meter',
        14: u'bench',
        15: u'bird',
        16: u'cat',
        17: u'dog',
        18: u'horse',
        19: u'sheep',
        20: u'cow',
        21: u'elephant',
        22: u'bear',
        23: u'zebra',
        24: u'giraffe',
        25: u'backpack',
        26: u'umbrella',
        27: u'handbag',
        28: u'tie',
        29: u'suitcase',
        30: u'frisbee',
        31: u'skis',
        32: u'snowboard',
        33: u'sports ball',
        34: u'kite',
        35: u'baseball bat',
        36: u'baseball glove',
        37: u'skateboard',
        38: u'surfboard',
        39: u'tennis racket',
        40: u'bottle',
        41: u'wine glass',
        42: u'cup',
        43: u'fork',
        44: u'knife',
        45: u'spoon',
        46: u'bowl',
        47: u'banana',
        48: u'apple',
        49: u'sandwich',
        50: u'orange',
        51: u'broccoli',
        52: u'carrot',
        53: u'hot dog',
        54: u'pizza',
        55: u'donut',
        56: u'cake',
        57: u'chair',
        58: u'couch',
        59: u'potted plant',
        60: u'bed',
        61: u'dining table',
        62: u'toilet',
        63: u'tv',
        64: u'laptop',
        65: u'mouse',
        66: u'remote',
        67: u'keyboard',
        68: u'cell phone',
        69: u'microwave',
        70: u'oven',
        71: u'toaster',
        72: u'sink',
        73: u'refrigerator',
        74: u'book',
        75: u'clock',
        76: u'vase',
        77: u'scissors',
        78: u'teddy bear',
        79: u'hair drier',
        80: u'toothbrush'}

def setpaths(dbname = "CAMEL",basepath = "./"):
    dbpath = basepath + dbname
    VIZIRObjpath = basepath + "VIZIRObjData" 
    VIZIROutputpath = basepath + "VIZIROutput"
    for xx in range(1,26):
        os.mkdirs(dbpath+"/scene"+xx+"/VISUAL",exists_ok=True)
        os.mkdirs(dbpath+"/scene"+xx+"/IR",exists_ok=True)
    for xx in range(1,80):
        os.mkdirs(VIZIRObjpath+"/Obj"+MSCOCO[xx]+"/VISUAL",exists_ok=True)
        os.mkdirs(VIZIRObjpath+"/Obj"+MSCOCO[xx]+"/IR",exists_ok=True)
    os.mkdirs(VIZIROutputpath+"/fframe",exists_ok=True)
    for xx in range(1,80):
        os.mkdirs(VIZIROutputpath+"/Objects/"+MSCOCO[xx]+"/VISUAL",exists_ok=True)
        os.mkdirs(VIZIROutputpath+"/Objects/"+MSCOCO[xx]+"/IR",exists_ok=True)
    return dbpath, VIZIRObjpath,VIZIROutputpath


def comparescene(dbtype="DB",path="./",scenenum=1,imgnum=1):
    IRimg = None
    Visimg = None
    if dbtype=="DB":
        dirpath = pathlib.Path(dirpath+"/scene"+scenenum)
        IRimg = list(dirpath.glob('IR/*'))
        Visimg = list(dirpath.glob('VISUAL/*'))
    else:
        dirpath = pathlib.Path(dirpath+"/fframe")
        IRimg = list(dirpath.glob('IR*.*'))
        Visimg = list(dirpath.glob('VIS*.*'))
    PIL.Image.open(str(Visimg[imgnum]))
    PIL.Image.open(str(IRimg[imgnum]))
    
def compareobjects(path="./",category="1",imgnum=1):
    IRimg = None
    Visimg = None
    dirpath = pathlib.Path(dirpath+"/objects/"+MSCOCO[category])
    IRimg = list(dirpath.glob('IR*.*'))
    Visimg = list(dirpath.glob('VIS*.*'))
    PIL.Image.open(str(Visimg[imgnum]))
    PIL.Image.open(str(IRimg[imgnum]))

def saveimagedata(objtype="FRAME",path="./",imgname="IR",category="1",imgobj)
    fpath = path
    if objtype=="FRAME":
        fpath = fpath+"/fframe"
    else:
        fpath = fpath+MCOCO[category]
    fpath = fpath + imgname
    tf.keras.preprocessing.image.save_img(fpath,imgobj)
    


    
